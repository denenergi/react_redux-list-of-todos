{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","status","query","initialState","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","id","title","completed","dispatch","isCurrentTodo","className","ClassNames","onClick","TodoList","length","map","TodoFilter","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","isLoading","setIsLoading","filteredTodos","includesQuery","toLowerCase","includes","todosFromServer","finally","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5d47436.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = {\n  type: 'filter/QUERY';\n  payload: string;\n};\n\ntype SetStatusAction = {\n  type: 'filter/STATUS';\n  payload: Status;\n};\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/QUERY',\n  payload: query,\n});\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'filter/STATUS',\n  payload: status,\n});\n\nexport const actions = { setStatus, setQuery };\n\nconst initialState = {\n  query: '',\n  status: 'all',\n};\n\ntype Action = SetQueryAction | SetStatusAction;\n\nconst filterReducer = (\n  state = initialState,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'filter/STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET',\n  payload: Todo[]\n};\n\nconst SetTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { SetTodos };\n\nconst todosReducer = (\n  state: Todo[] = [],\n  action: SetTodosAction,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import ClassNames from 'classnames';\nimport { FC } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoItem: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const dispatch = useAppDispatch();\n\n  const isCurrentTodo = useAppSelector(state => (\n    state.currentTodo?.id === id\n  ));\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={ClassNames({ 'has-background-info-light': isCurrentTodo })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={completed ? 'has-text-success' : 'has-text-danger'}>\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => dispatch(actions.setTodo(todo))}\n        >\n          <span className=\"icon\">\n            <i\n              className={ClassNames('far',\n                isCurrentTodo ? 'fa-eye-slash' : 'fa-eye')}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.length === 0\n        ? (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )\n        : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {todos.map(todo => (\n                <TodoItem todo={todo} key={todo.id} />\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const query = useAppSelector(state => state.filter.query);\n  const status = useAppSelector(state => state.filter.status);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={event => {\n              dispatch(actions.setStatus(event.target.value as Status));\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => {\n            dispatch(actions.setQuery(event.target.value));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length > 0 && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(actions.setQuery(''))}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const dispatch = useAppDispatch();\n\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then(setUser);\n    }\n  }, [currentTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {user === null\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${currentTodo?.id}`}\n              </div>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => dispatch(actions.removeTodo())}\n              />\n            </header>\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {currentTodo?.title}\n              </p>\n              <p className=\"block\" data-cy=\"modal-user\">\n                {currentTodo?.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)}\n                {' by '}\n                <a href={`mailto:${user.email}`}>{user.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\nimport { RootState } from './app/store';\nimport { actions } from './features/todos';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n\n  const filteredTodosSelector = (state: RootState) => {\n    const { todos } = state;\n    const { query, status } = state.filter;\n\n    return todos.filter(todo => {\n      const includesQuery = todo.title.toLowerCase().includes(query.toLowerCase());\n\n      switch (status) {\n        case 'all':\n          return includesQuery;\n        case 'active':\n          return todo.completed === false && includesQuery;\n        case 'completed':\n          return todo.completed && includesQuery;\n        default:\n          return true;\n      }\n    });\n  };\n\n  const filteredTodos = useAppSelector(filteredTodosSelector);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((todosFromServer) => {\n        dispatch(actions.SetTodos(todosFromServer));\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (<TodoList todos={filteredTodos} />)}\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentTodo !== null && (<TodoModal />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}